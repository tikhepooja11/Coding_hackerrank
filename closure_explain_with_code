//  BEST EXAMPLE OF closures
function outerFun(){
    const outerVariable = "I am outer fun"
    function innerFun(){
        console.log(outerVariable)  //  can access outerFun scope & variables
    }
    return innerFun
}

const closure = outerFun() // will return whole inner function body
closure() //    calling innerfun which already has access to outerfun variable - outerVariable though outerFun execution has completed


// Importance or when to use closure ->

// closure allows us to create a private data inside outerFunction 
// in this example private data is outervariable which is not accessible by simply calling outerfunction
// so it encapsulates/ hides the data from outer world & only innerfun can access it.

// example 2

function outerFunction(a: number){
    function innerFunction(b: number){
        return a * b
    }
    return innerFunction
}

var closureOutput = outerFunction(4) // only returns inner function entire body & sets 4 as argument to outerFunction i.e a=4
var result = closureOutput(5) // calls innerFunction with 5 as argument. b=5

console.log(result) // 20
