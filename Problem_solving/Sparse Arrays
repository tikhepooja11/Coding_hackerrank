function matchingStrings(stringList: string[], queries: string[]): number[] {
    //  Approach 1->

    // Write your code here
    // let map = new Map<string, number>();
    // for(let i=0; i< stringList.length ; i++){
    //     if(!map.has(stringList[i])){
    //         map.set(stringList[i], 1)
    //     }else{
    //         let count = map.get(stringList[i])
    //         map.set(stringList[i], count + 1)
    //     }
    // }

    // let result: number[] = []
    // for(let i=0; i< queries.length ; i++){
    //     if(!map.get(queries[i])){
    //         result.push(0)
    //     }else{
    //         result.push(map.get(queries[i]))
    //     }
    // }
    
    // return result


    //  Approach 2->
    let result: number[] = []

    for(let i=0; i< queries.length; i++){
        let count =0;
        for(let j=0; j<stringList.length; j++){
            if(stringList[j] === queries[i]){
                count++
            }
        }
        result.push(count)
    }
    return result
    
}


//  find pairs whose sum are divisible by 5

// let arr: number[] = [1, 3, 2, 6, 1, 2]//[1,2,3,4,5,6]
// const k: number = 3;
// let count = 0;

// for(let i=0; i<arr.length-1; i++){
//     for(let j=i+1; j< arr.length; j++){
//         if((arr[i]+arr[j]) % k === 0){
//             console.log(arr[i]+" , "+arr[j] + "\n")
//             count++;
//         }
//     }
// }
// console.log(count)

--------------------------------------------------------------

function migratoryBirds(arr: number[]): number {
    // Write your code here
    
    let map = new Map<number, number>()
    for(let i=0;i<arr.length;i++){
        if(!map.has(arr[i])){
            map.set(arr[i], 1)
        }else{
            map.set(arr[i],( map.get(arr[i]) + 1) )
        }
    }
    console.log(map)

    let max = Number.MIN_VALUE, maxMigratoryBirds =0;
    for(const [key, value] of map.entries()){
        if(value > max){
            max = value
            maxMigratoryBirds = key
        }
    }
    return maxMigratoryBirds

}

const maxMigratoryBirds = migratoryBirds([1, 4, 4, 4, 5, 3,])
console.log(maxMigratoryBirds)


